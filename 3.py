# В завершение мы изменяем позицию и масштаб модели.
# Попробуйте запустить программу.
# По умолчанию Панда запускает задачу, которая позволяет управлять камерой с помощью мыши:
# Левая кнопка: перемещение вправо-влево
# Правая кнопка: назад-вперёд
# Средняя: вращение вокруг центра сцены
# Правая и средняя: вращение по оси взгляда
# Попробуйте - вам станет ясно, что это не самый удобный способ управления камерой.
# Взамен, мы напишем задачу (task) которая напрямую будет контролировать камеру.
# Задача (task) - это подпрограмма, вызываемая каждый цикл прорисовки, либо через заданный промежуток времени.
# Изменим наш код:


from math import pi, sin, cos

from direct.showbase.ShowBase import ShowBase
from direct.task import Task


class MyApp(ShowBase):
    def __init__(self):
        ShowBase.__init__(self)

    # Загрузка моделиl.
        self.scene = self.loader.loadModel("models/environment")
        # Прицепляем модель к узлу рендера.
        self.scene.reparentTo(self.render)
        # Устанавливаем масштаб и позицию для модели.
        self.scene.setScale(0.25, 0.25, 0.25)
        self.scene.setPos(-8, 42, 0)

        # Добавляем в менеджер задач, запуск функции.
        self.taskMgr.add(self.spinCameraTask, "SpinCameraTask")

        # Функция которая обрабатывает управление камерой.
    def spinCameraTask(self, task):
        angleDegrees = task.time * 6.0

        angleRadians = angleDegrees * (pi / 180.0)
        self.camera.setPos(20 * sin(angleRadians), -20.0 * cos(angleRadians), 3)
        self.camera.setHpr(angleDegrees, 0, 0)
        return Task.cont


app = MyApp()
app.run()

# Функция taskMgr.add указывает менеджеру задач панды, что нужно каждый цикл вызывать подпрограмму SpinCameraTask.
# Это подпрограмма, которую мы написали для управления камерой. До тех пор, пока подпрограмма SpinCameraTask
# возвращает константу Task.cont, менеджер задач будет продолжать выполнять её каждый кадр.
#
# Наша подпрограмма вычисляет необходимую позицию камеры, основанную на прошедшем времени.
# Камера поворачивается на 6 градусов в секунду. Первые две строчки вычисляют желаемую ориентацию камеры - первая
# в градусах, вторая в радианах. SetPos устанавливает новую позицию камеры. SetHpr - ориентацию камеры.
# Замечание: SetPos и SetHpr- методы, наследованные от nodePath - подробнее об этом в главе про Граф сцены.